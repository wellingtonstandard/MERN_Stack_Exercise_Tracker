app.post('/api/posts', verifyToken, (req,res) => {
    jwt.verify(req.token, 'secretkey', (err, authData) => {
        if (err) {
            res.sendStatus(403);
        } else{
            res.json({
                    message: 'Post created...',
                    authData
                });
        }
    })

});

app.post('/api/login', (req,res) => {
    const user = {
        id: 1,
        username: 'Misty',
        email: 'Misty@gmail.com'
    }
    jwt.sign({user}, 'secretkey', (err, token) => {
        res.json({
            token
        });
    });
});
// Token Format
// Authorization: Bearer <access_token>

// Verify Token
function verifyToken(req, res, next) {
    // Get auth header
    const bearerHeader = req.headers['authorization'];
    // Check if bearer is undefined
    if(typeof bearerHeader !== 'undefined'){
        // Split at the space
        const bearer = bearerHeader.split(' ');
        // Get token from array
        const bearerToken = bearer[1];
        //Set the token
        req.token = bearerToken;

        next();
    }else {
        res.sendStatus(403);
    }
}


